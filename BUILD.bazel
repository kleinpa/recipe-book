load("@bazel_latex//:latex.bzl", "latex_document")
load("@bazel_skylib//rules:build_test.bzl", "build_test")
load("@rules_python//python:pip.bzl", "compile_pip_requirements")

compile_pip_requirements(
    name = "requirements",
    extra_args = ["--allow-unsafe"],
    requirements_in = ":requirements.txt",
    requirements_txt = ":requirements_lock.txt",
    requirements_windows = "requirements_windows.txt",
)

exports_files([
    "requirements.txt",
    "requirements_lock.txt",
    "requirements_windows.txt",
])

recipes = glob(["recipes/**/*.tex"])

recipes_media = glob(
    [recipe.replace(".tex", ".png") for recipe in recipes],
    allow_empty = True,
)

latex_deps = [
    "common.tex",
    "info_tex",
    "@bazel_latex//packages:amsmath",
    "@bazel_latex//packages:array",
    "@bazel_latex//packages:babel_english",
    "@bazel_latex//packages:geometry",
    "@bazel_latex//packages:graphicx",
    "@bazel_latex//packages:helvet",
    "@bazel_latex//packages:hyperref",
    "@bazel_latex//packages:titlesec",
    "@bazel_latex//packages:xfrac",
    "@bazel_latex//packages:gensymb",
    "@bazel_latex//packages:siunitx",
]

latex_document(
    name = "book",
    srcs = recipes + recipes_media + latex_deps,
    main = "book.tex",
    visibility = ["//visibility:public"],
)

[
    genrule(
        name = recipe.split("/")[-1].replace(".tex", "_single_tex"),
        outs = [recipe.split("/")[-1].replace(".tex", "_single.tex")],
        cmd = "echo \\\\newcommand{{\\\\inner}}{{\\\\input{{{}}}}}\\\\newcommand{{\\\\name}}{{{}}}\\\\input{{single}} > \"$@\"".format(
            recipe.replace(".tex", ""),
            recipe.split("/")[-1].replace(".tex", ""),
        ),
        output_to_bindir = True,
    )
    for recipe in recipes
]

[
    latex_document(
        name = recipe.split("/")[-1].replace(".tex", ""),
        srcs = [recipe] + ["single.tex"] + glob(
            [recipe.replace(".tex", ".png")],
            allow_empty = True,
        ) + latex_deps,
        main = recipe.split("/")[-1].replace(".tex", "_single_tex"),
    )
    for recipe in recipes
]

filegroup(
    name = "single_pages",
    srcs = [recipe.split("/")[-1].replace(".tex", "") for recipe in recipes],
    visibility = ["//visibility:public"],
)

genrule(
    name = "info_tex",
    outs = ["info.tex"],
    cmd = "./$(location //tools:latex_info)  > $@",
    stamp = 1,
    tools = ["//tools:latex_info"],
    visibility = ["//visibility:public"],
)

build_test(
    name = "build_test",
    targets = [
        ":book",
        ":single_pages",
    ],
)
